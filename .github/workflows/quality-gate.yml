name: Quality Gate

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3
      - name: Install Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - name: Install Audit
        run: cargo install cargo-audit
      - name: Run Audit
        run: cargo audit

  lint:
    name: lint-and-format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v1
      - name: Test Format
        run: |
          cargo fmt -- --check
          cargo clippy --tests --all-features --all-targets -- -D clippy::all

  cargo-doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: run cargo doc
        run: RUSTDOCFLAGS="-D warnings" cargo doc

  test:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        toolchain: [stable]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: "${{ matrix.toolchain }}"
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown
      - name: Check with with features
        run: cargo check --verbose --all-features
      - name: Run tests with features
        run: |
          # If macOs install llvm with brew
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install llvm
            export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
            export CC=/opt/homebrew/opt/llvm/bin/clang
            export AR=/opt/homebrew/opt/llvm/bin/llvm-ar
            brew install --cask chromedriver # wasm-bindgen-test always requires the lastest chromedriver
          else
            sudo apt-get install -y chromium-chromedriver # wasm-bindgen-test always requires the lastest chromedriver
          fi
          cargo install wasm-pack
          wasm-pack build --target bundler --all-features --release
          cargo test --verbose --all-features
          # tcp:9999 is leaked by this command
          # cd tests && npm i && npm run dev & (sleep 10 && MOCK_SERVER_PORT=9999 WASM_BINDGEN_USE_BROWSER=1 wasm-pack test --chrome --headless --features formdata_polyfill_js_test)
